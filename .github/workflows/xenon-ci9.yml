name: OFRP-CI

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:

  build:
    runs-on: ubuntu-18.04

    env:
      VENDOR: infinix
      DEVICE: spinel
      ANDROID_ROOT: /home/runner/work/orangefox/

    steps:
    - name: Checkout
      uses: actions/checkout@main
    
    - name: Initialization environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
        bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev libwxgtk3.0-dev
        sudo docker rmi `docker images -q`
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        mkdir -p ~/bin
        wget 'https://storage.googleapis.com/git-repo-downloads/repo' -P ~/bin
        chmod +x ~/bin/repo
        git config --global user.name "OrangeFox Volla Phone CI"
        git config --global user.email "thisemaildoesnotexist@exist.com"
    - name: Downloading source code
      run: |
        source of.env
        mkdir -p $ANDROID_ROOT
        cd $ANDROID_ROOT
        #repo init -u https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni -b twrp-9.0 --depth=1
        repo init --depth=1 -u https://gitlab.com/OrangeFox/Manifest.git -b fox_9.0
        repo sync -j8 -c 
        git clone https://github.com/00p513-dev/device_infinix_spinel device/infinix/spinel -b main --depth=1 
 
    - name: Build recovery
      run: |
        chmod +x build2.sh
        bash -x build2.sh
      shell: bash
    - name: Post build to Telegram
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.CHAT_ID }}
        token: ${{ secrets.BOT_ID }}
        message: OrangeFox Recovery for Spinel is built!
        document: /home/runner/work/orangefox/out/target/product/*/*.img && *zip
