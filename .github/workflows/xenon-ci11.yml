name: SHRP-CI2

on:
  workflow_dispatch:

    inputs:
      pushtosf: true
env:
  MANIFEST: "https://github.com/SHRP/platform_manifest_twrp_omni"
  # Recovery Manifest URL with -b branch
  DT_LINK: "https://github.com/SHRP-Devices/device_realme_RMX1801"
  # Your Device Tree Link
  VENDOR: "realme"
  # Your Device's Vendor name as in used inside DT. Example: xiaomi, samsung, asus, etc.
  CODENAME: "RMX1801"
  # Your Device's Codename as in used inside DT." Example: nikel, phoenix, ginkgo, etc.
  KERNEL_LINK: ""
  # Kernel repo link with optional -b branch. Only for building kernel from source. Ignore if using prebuilt.
  TARGET: "recoveryimage"
  # Set as recoveryimage (or bootimage if no recovery partition avaiable)
  FLAVOR: "eng"
  # eng by default, change the variable if you want userdebug
  EXTRA_CMD: ""
  # For qualcomm FDE devices put git clone https://github.com/omnirom/android_vendor_qcom_opensource_commonsys --depth=1 -b android-9.0 vendor/qcom/opensource/commonsys in EXTRA CMD
  # If you want to Execute any external Command Before Compilation Starts
  TZ: "Asia/Dhaka"
  TOKEN: ${{ secrets.BOT_API }}

jobs:
  shrpCI:
    runs-on: ubuntu-20.04

    steps:
       - name: Cleaning Up Runner
         uses: rokibhasansagar/slimhub_actions@main

       - name: Recovery Compilation
         uses: ElytrA8/Recovery-Compiler@production

       - name: PUSH To TG
         run: |
              cd ${BuildPath}/out/target/product/${CODENAME}/
              ZIP=$(echo *stable*.zip)
              curl -F document=@$ZIP "https://api.telegram.org/bot$TOKEN/sendDocument" \
                  -F chat_id="-1001595569305" \
                  -F "disable_web_page_preview=true" \
                  -F "parse_mode=html" \
                  -F caption=" <i> üõ†Ô∏èCI|SHRP Recovery </i> for <b> '$VENDOR' '$CODENAME' </b> is available | Build finished on <b> $(date) </b> | <i> #SHRP Recovery </i> "
              ZIP=$(echo *AddonRescue*.zip)
              curl -F document=@$ZIP "https://api.telegram.org/bot$TOKEN/sendDocument" \
                  -F chat_id="-1001595569305" \
                  -F "disable_web_page_preview=true" \
                  -F "parse_mode=html" \
                  -F caption=" <i> SHRP AddOnRescue </i> for <b> '$VENDOR' '$CODENAME' </b> | <i> #SHRP Recovery </i> "

       - name: PUSH to SF
         if: ${{ github.event.inputs.pushtosf }} == 'true'
         run: |
              cd ${BuildPath}/out/target/product/${CODENAME}/
              sudo apt-get update -y && sudo apt-get install expect -y
              expect -c '
              spawn sftp ${{ secrets.SFUSER }}@frs.sourceforge.net
              expect \"yes/no\"
              send "yes\r"
              expect \"Password\"       
              send "${{ secrets.SFPASS }}\r"
              expect \"sftp> \"
              send "cd /home/frs/project/xenon-ci/$::env(CODENAME)/\r"
              set timeout -1
              send "put *stable*.zip\r"
              expect "Uploading"
              expect "*100%*"
              expect "sftp*"
              send "put *AddonRescue*.zip\r"
              expect "Uploading"
              expect "*100%*"
              expect "sftp*"
              send "bye\r"
              interact
              '
