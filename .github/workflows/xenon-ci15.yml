name: VHE-CI

on:
  workflow_dispatch:


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout into this repo source
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: 1.11

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9.5'

    - name: Install python requirements
      run: |
        pip install pip setuptools wheel -U
        pip install pyrogram tgcrypto -U

    - name: Clone VHSCode-Android source
      run: |
        git clone https://github.com/vhqtvn/VHEditor-Android source

    - name: Install ndk
      run: |
        sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;21.3.6528147"

    - name: Build the app
      run: |
        cd source
        USE_SPLITBUILD=1 ./gradlew assembleRelease --no-daemon

    - name: Save revision and branch
      run: |
        echo "SHORT_REV=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "LONG_REV=$(git rev-parse HEAD)" >> $GITHUB_ENV
        echo "BRANCH=$(sed 's/-/_/g' <<< `git rev-parse --abbrev-ref HEAD`)" >> $GITHUB_ENV
        echo "TIME=$(sed 's/-/_/g' <<< `git log -1 --format=%cd`)" >> $GITHUB_ENV

    - name: Set file name
      run: |
        echo "FILENAME4=VHEditor_${SHORT_REV}_arm64-v8a.apk" >> $GITHUB_ENV
        echo "FILENAME3=VHEditor_${SHORT_REV}_armeabi-v7a.apk" >> $GITHUB_ENV
        echo "FILENAME2=VHEditor_${SHORT_REV}_x86_64.apk" >> $GITHUB_ENV
        echo "FILENAME1=VHEditor_${SHORT_REV}_x86.apk" >> $GITHUB_ENV

    - run: ls -Ralph source/app/build/outputs/

    - name: Rename the app
      run: |
        mv source/app/build/outputs/apk/release/app-x86-release.apk ${FILENAME1}
        mv source/app/build/outputs/apk/release/app-x86_64-release.apk ${FILENAME2}
        mv source/app/build/outputs/apk/release/app-armeabi-v7a-release.apk ${FILENAME3}
        mv source/app/build/outputs/apk/release/app-arm64-v8a-release.apk ${FILENAME4}

    - name: Send a message before the APKs
      env:
        CHAT_ID: ${{ secrets.CHAT_ID }}
        BOT_TOKEN: ${{ secrets.BOT_API }}
        API_ID: ${{ secrets.API_ID }}
        API_HASH: ${{ secrets.API_HASH }}
      run: |
        python VHE/send_stickers.py

    - name: Run android.py
      env:
        CHAT_ID: ${{ secrets.CHAT_ID }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        API_ID: ${{ secrets.API_ID }}
        API_HASH: ${{ secrets.API_HASH }}
      run: |
        python VHE/send_files.py
