name: GSI-Workshop3

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Load Configuration
        uses: falti/dotenv-action@v0.2.5
        id: config
        with:
          path: config3.env
      - name: Check Configuration
        run: |
          function required () { if ! [[ "$1" ]]; then echo "$2 variable can't be null." && exit 1; fi }
          required "${{ steps.config.outputs.url }}" "URL config"
          required "${{ steps.config.outputs.firmware_type }}" "FIRMWARE_TYPE config"
          required "${{ steps.config.outputs.output_type }}" "OUTPUT_TYPE config"
          required "${{ steps.config.outputs.repack_name }}" "REPACK_NAME config"

      - name: Initializing environment
        run: |
            sudo -E apt-get -qq install git wget
       
      - name: Clone ErfanGSI Source Code
        run: git clone --recurse-submodules https://github.com/XenonTheInertG/XenonGSIs.git ErfanGSIs
       
      - name: Setting up ErfanGSI requirements
        run: |
              sudo chmod -R 777 ErfanGSIs
              cd ErfanGSIs
              sudo bash setup.sh
              
      - name: Build AB & AOnly
        if: ${{ steps.config.outputs.output_type == 'all' }}
        run: |
          sudo ./ErfanGSIs/url2GSI.sh "${{ steps.config.outputs.url }}" "${{ steps.config.outputs.firmware_type }}" "${{ steps.config.outputs.extra_args }}"
      - name: Build AB
        if: ${{ steps.config.outputs.output_type == 'ab' }}
        run: |
          sudo ./ErfanGSIs/url2GSI.sh "${{ steps.config.outputs.url }}" "${{ steps.config.outputs.firmware_type }}" --ab ${{ steps.config.outputs.extra_args }}
      - name: Build AOnly
        if: ${{ steps.config.outputs.output_type == 'a' }}
        run: |
          sudo ./ErfanGSIs/url2GSI.sh "${{ steps.config.outputs.url }}" "${{ steps.config.outputs.firmware_type }}" --aonly ${{ steps.config.outputs.extra_args }}
       
      - name: Repack AB,Aonly
        if: ${{ steps.config.outputs.output_type == 'all' }}
        run: |
              mkdir final
              sudo chmod -R 777 ErfanGSIs/output
              zip -r ErfanGSIs/output/"${{ steps.config.outputs.repack_name }}"-GSI-Aonly.7z ErfanGSIs/output/*-Aonly-*.img
              zip -r ErfanGSIs/output/"${{ steps.config.outputs.repack_name }}"-GSI-AB.7z ErfanGSIs/output/*-AB-*.img

      - name: Repack Aonly
        if: ${{ steps.config.outputs.output_type == 'a' }}
        run: |
              mkdir final
              sudo chmod -R 777 ErfanGSIs/output
              zip -r ErfanGSIs/output/"${{ steps.config.outputs.repack_name }}"-GSI-Aonly.7z ErfanGSIs/output/*-Aonly-*.img

      - name: Repack AB
        if: ${{ steps.config.outputs.output_type == 'ab' }}
        run: |
              mkdir final
              sudo chmod -R 777 ErfanGSIs/output
              zip -r ErfanGSIs/output/"${{ steps.config.outputs.repack_name }}"-GSI-AB.7z ErfanGSIs/output/*-AB-*.img

      - name: Upload AB,Aonly
        if: ${{ steps.config.outputs.output_type == 'all' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ github.workspace }}/ErfanGSIs/output/*.7z
          token: ${{ secrets.GIT_TOKEN }}
          tag: "${{ steps.config.outputs.firmware_type }}"
          repo: GSI-Factory
      - name: Upload AB
        if: ${{ steps.config.outputs.output_type == 'ab' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ github.workspace }}/ErfanGSIs/output/*.7z
          token: ${{ secrets.TOKEN }}
          tag: "${{ steps.config.outputs.firmware_type }}"

      - name: Upload A Only
        if: ${{ steps.config.outputs.output_type == 'a' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ github.workspace }}/ErfanGSIs/output/*.7z
          token: ${{ secrets.TOKEN }}
          tag: "${{ steps.config.outputs.firmware_type }}"

      - name: Print Build Info
        run: |
              cat ErfanGSIs/output/*-Aonly-*.txt
